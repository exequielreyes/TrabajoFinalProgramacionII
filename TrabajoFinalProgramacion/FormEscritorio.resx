<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btDecodificarImagenQR.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btSelImagenQR.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>